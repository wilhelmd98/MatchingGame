/*
 * Programmer:
 * Date: 
 * Program Name: Matching Game
 * Program Description: This program uses arrays to simulate a matching game.
 * A grid of cards will be displayed and the user is to select 2 cards at a time
 * looking for matching cards. The goal of this game is to see how quickly 
 * the user can find all the matches.
 */
package MatchingGame;

import java.util.*;
import javax.swing.ImageIcon;
/**
 * @author YourNameHere
 */
public class MatchingGame extends javax.swing.JFrame {
    ArrayList <String> cards = new ArrayList();
    ArrayList <String> set = new ArrayList();
    ImageIcon a = new ImageIcon("ram.jpg");
    ImageIcon b = new ImageIcon("case.jpg");
    ImageIcon c = new ImageIcon("dvd.jpg");
    ImageIcon d = new ImageIcon("harddrive.jpg");
    ImageIcon e = new ImageIcon("keyboard.jpg");
    ImageIcon f = new ImageIcon("mice.jpg");
    ImageIcon g = new ImageIcon("monitor.jpg");
    ImageIcon h = new ImageIcon("printer.jpg");
    ImageIcon back = new ImageIcon("cardback.jpg");
    ImageIcon done = new ImageIcon("done.jpg");
    int count, c1, c2, choice1, choice2;
    int cardsLeft = 16;
    int[] change = new int[16];
    
    
    /**
     * Creates new form MatchingGame
     */
    public MatchingGame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainTitle = new javax.swing.JLabel();
        card1 = new javax.swing.JButton();
        card2 = new javax.swing.JButton();
        card3 = new javax.swing.JButton();
        card4 = new javax.swing.JButton();
        card5 = new javax.swing.JButton();
        card6 = new javax.swing.JButton();
        card7 = new javax.swing.JButton();
        card8 = new javax.swing.JButton();
        card9 = new javax.swing.JButton();
        card10 = new javax.swing.JButton();
        card11 = new javax.swing.JButton();
        card12 = new javax.swing.JButton();
        card13 = new javax.swing.JButton();
        card14 = new javax.swing.JButton();
        card15 = new javax.swing.JButton();
        card16 = new javax.swing.JButton();
        playButton = new javax.swing.JButton();
        guessButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        outputDisplay = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainTitle.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        mainTitle.setForeground(new java.awt.Color(204, 0, 0));
        mainTitle.setText("Matching Game");

        card1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchingGame/cardback.jpg"))); // NOI18N
        card1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                card1MouseClicked(evt);
            }
        });

        card2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchingGame/cardback.jpg"))); // NOI18N
        card2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                card2MouseClicked(evt);
            }
        });

        card3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchingGame/cardback.jpg"))); // NOI18N
        card3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                card3MouseClicked(evt);
            }
        });

        card4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchingGame/cardback.jpg"))); // NOI18N
        card4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                card4MouseClicked(evt);
            }
        });

        card5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchingGame/cardback.jpg"))); // NOI18N
        card5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                card5MouseClicked(evt);
            }
        });

        card6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchingGame/cardback.jpg"))); // NOI18N
        card6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                card6MouseClicked(evt);
            }
        });

        card7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchingGame/cardback.jpg"))); // NOI18N
        card7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                card7MouseClicked(evt);
            }
        });

        card8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchingGame/cardback.jpg"))); // NOI18N
        card8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                card8MouseClicked(evt);
            }
        });

        card9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchingGame/cardback.jpg"))); // NOI18N
        card9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                card9MouseClicked(evt);
            }
        });

        card10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchingGame/cardback.jpg"))); // NOI18N
        card10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                card10MouseClicked(evt);
            }
        });

        card11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchingGame/cardback.jpg"))); // NOI18N
        card11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                card11MouseClicked(evt);
            }
        });

        card12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchingGame/cardback.jpg"))); // NOI18N
        card12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                card12MouseClicked(evt);
            }
        });

        card13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchingGame/cardback.jpg"))); // NOI18N
        card13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                card13MouseClicked(evt);
            }
        });

        card14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchingGame/cardback.jpg"))); // NOI18N
        card14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                card14MouseClicked(evt);
            }
        });

        card15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchingGame/cardback.jpg"))); // NOI18N
        card15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                card15MouseClicked(evt);
            }
        });

        card16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MatchingGame/cardback.jpg"))); // NOI18N
        card16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                card16MouseClicked(evt);
            }
        });

        playButton.setText("Play");
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });

        guessButton.setText("Guess Again");
        guessButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guessButtonActionPerformed(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        outputDisplay.setText("Click the Play button to start. Make sure to click Guess Again after each guess.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mainTitle)
                .addGap(189, 189, 189))
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(card5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(card6, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(card7, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(card8, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(card1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(card2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(card3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(card4, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(card9, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(card10, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(card11, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(card12, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(card13, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(playButton)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(card14, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(card15, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(card16, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addComponent(guessButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(exitButton)
                                .addGap(32, 32, 32))))
                    .addComponent(outputDisplay, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(card3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(card8, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(card5, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(card6, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(card7, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(card9, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card10, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card11, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card12, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(card13, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card14, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card15, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card16, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playButton)
                    .addComponent(guessButton)
                    .addComponent(exitButton))
                .addGap(18, 18, 18)
                .addComponent(outputDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed

        /** Set change array */
        for (int z=0; z<=15; z++){
            change[z] = 1;
        }
        
        /** Assign cards at random */
        String temp;
        for (int x=0; x<=7; x++){
            for (int y=0; y<2; y++){
                temp = Integer.toString(x);
                set.add(temp);
            }
        }
        for(int x=0; x<=15; x++){
            double index = Math.floor(Math.random()*(16-x));
            int index1 = (int) index;
            cards.add(set.get(index1));
            set.remove(set.get(index1));
        }
    }//GEN-LAST:event_playButtonActionPerformed

    private void card1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_card1MouseClicked
        String temp = cards.get(0);
        
        switch (temp) {
            case "0":
                card1.setIcon(a);
                break;
            case "1":
                card1.setIcon(b);
                break;
            case "2":
                card1.setIcon(c);
                break;
            case "3":
                card1.setIcon(d);
                break;
            case "4":
                card1.setIcon(e);
                break;
            case "5":
                card1.setIcon(f);
                break;
            case "6":
                card1.setIcon(g);
                break;
            case "7":
                card1.setIcon(h);
                break;
            default:
                break;
        }
        
        count++;
        if (count == 1){
            c1=Integer.parseInt(temp);
            change[0] = 0;
        } else if (count == 2){
            c2=Integer.parseInt(temp);
            change[0] = 0;
        }
    }//GEN-LAST:event_card1MouseClicked

    private void card2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_card2MouseClicked
        String temp = cards.get(1);
        
        switch (temp) {
            case "0":
                card2.setIcon(a);
                break;
            case "1":
                card2.setIcon(b);
                break;
            case "2":
                card2.setIcon(c);
                break;
            case "3":
                card2.setIcon(d);
                break;
            case "4":
                card2.setIcon(e);
                break;
            case "5":
                card2.setIcon(f);
                break;
            case "6":
                card2.setIcon(g);
                break;
            case "7":
                card2.setIcon(h);
                break;
            default:
                break;
        }
        
        count++;
        if (count == 1){
            c1=Integer.parseInt(temp);
            change[1] = 0;
        } else if (count == 2){
            c2=Integer.parseInt(temp);
            change[1] = 0;
        }
    }//GEN-LAST:event_card2MouseClicked

    private void card3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_card3MouseClicked
        String temp = cards.get(2);
        
        switch (temp) {
            case "0":
                card3.setIcon(a);
                break;
            case "1":
                card3.setIcon(b);
                break;
            case "2":
                card3.setIcon(c);
                break;
            case "3":
                card3.setIcon(d);
                break;
            case "4":
                card3.setIcon(e);
                break;
            case "5":
                card3.setIcon(f);
                break;
            case "6":
                card3.setIcon(g);
                break;
            case "7":
                card3.setIcon(h);
                break;
            default:
                break;
        }
        
        count++;
        if (count == 1){
            c1=Integer.parseInt(temp);
            change[2] = 0;
        } else if (count == 2){
            c2=Integer.parseInt(temp);
            change[2] = 0;
        }
    }//GEN-LAST:event_card3MouseClicked

    private void card4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_card4MouseClicked
        String temp = cards.get(3);
        
        switch (temp) {
            case "0":
                card4.setIcon(a);
                break;
            case "1":
                card4.setIcon(b);
                break;
            case "2":
                card4.setIcon(c);
                break;
            case "3":
                card4.setIcon(d);
                break;
            case "4":
                card4.setIcon(e);
                break;
            case "5":
                card4.setIcon(f);
                break;
            case "6":
                card4.setIcon(g);
                break;
            case "7":
                card4.setIcon(h);
                break;
            default:
                break;
        }
        
        count++;
        if (count == 1){
            c1=Integer.parseInt(temp);
            change[3] = 0;
        } else if (count == 2){
            c2=Integer.parseInt(temp);
            change[3] = 0;
        }
    }//GEN-LAST:event_card4MouseClicked

    private void card5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_card5MouseClicked
        String temp = cards.get(4);
        
        switch (temp) {
            case "0":
                card5.setIcon(a);
                break;
            case "1":
                card5.setIcon(b);
                break;
            case "2":
                card5.setIcon(c);
                break;
            case "3":
                card5.setIcon(d);
                break;
            case "4":
                card5.setIcon(e);
                break;
            case "5":
                card5.setIcon(f);
                break;
            case "6":
                card5.setIcon(g);
                break;
            case "7":
                card5.setIcon(h);
                break;
            default:
                break;
        }
        
        count++;
        if (count == 1){
            c1=Integer.parseInt(temp);
            change[4] = 0;
        } else if (count == 2){
            c2=Integer.parseInt(temp);
            change[4] = 0;
        }
    }//GEN-LAST:event_card5MouseClicked

    private void card6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_card6MouseClicked
        String temp = cards.get(5);
        
        switch (temp) {
            case "0":
                card6.setIcon(a);
                break;
            case "1":
                card6.setIcon(b);
                break;
            case "2":
                card6.setIcon(c);
                break;
            case "3":
                card6.setIcon(d);
                break;
            case "4":
                card6.setIcon(e);
                break;
            case "5":
                card6.setIcon(f);
                break;
            case "6":
                card6.setIcon(g);
                break;
            case "7":
                card6.setIcon(h);
                break;
            default:
                break;
        }
        
        count++;
        if (count == 1){
            c1=Integer.parseInt(temp);
            change[5] = 0;
        } else if (count == 2){
            c2=Integer.parseInt(temp);
            change[5] = 0;
        }
    }//GEN-LAST:event_card6MouseClicked

    private void card7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_card7MouseClicked
        String temp = cards.get(6);
        
        switch (temp) {
            case "0":
                card7.setIcon(a);
                break;
            case "1":
                card7.setIcon(b);
                break;
            case "2":
                card7.setIcon(c);
                break;
            case "3":
                card7.setIcon(d);
                break;
            case "4":
                card7.setIcon(e);
                break;
            case "5":
                card7.setIcon(f);
                break;
            case "6":
                card7.setIcon(g);
                break;
            case "7":
                card7.setIcon(h);
                break;
            default:
                break;
        }
        
        count++;
        if (count == 1){
            c1=Integer.parseInt(temp);
            change[6] = 0;
        } else if (count == 2){
            c2=Integer.parseInt(temp);
            change[6] = 0;
        }
    }//GEN-LAST:event_card7MouseClicked

    private void card8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_card8MouseClicked
        String temp = cards.get(7);
        
        switch (temp) {
            case "0":
                card8.setIcon(a);
                break;
            case "1":
                card8.setIcon(b);
                break;
            case "2":
                card8.setIcon(c);
                break;
            case "3":
                card8.setIcon(d);
                break;
            case "4":
                card8.setIcon(e);
                break;
            case "5":
                card8.setIcon(f);
                break;
            case "6":
                card8.setIcon(g);
                break;
            case "7":
                card8.setIcon(h);
                break;
            default:
                break;
        }
        
        count++;
        if (count == 1){
            c1=Integer.parseInt(temp);
            change[7] = 0;
        } else if (count == 2){
            c2=Integer.parseInt(temp);
            change[7] = 0;
        }
    }//GEN-LAST:event_card8MouseClicked

    private void card9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_card9MouseClicked
        String temp = cards.get(8);
        
        switch (temp) {
            case "0":
                card9.setIcon(a);
                break;
            case "1":
                card9.setIcon(b);
                break;
            case "2":
                card9.setIcon(c);
                break;
            case "3":
                card9.setIcon(d);
                break;
            case "4":
                card9.setIcon(e);
                break;
            case "5":
                card9.setIcon(f);
                break;
            case "6":
                card9.setIcon(g);
                break;
            case "7":
                card9.setIcon(h);
                break;
            default:
                break;
        }
        
        count++;
        if (count == 1){
            c1=Integer.parseInt(temp);
            change[8] = 0;
        } else if (count == 2){
            c2=Integer.parseInt(temp);
            change[8] = 0;
        }
    }//GEN-LAST:event_card9MouseClicked

    private void card10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_card10MouseClicked
        String temp = cards.get(9);
        
        switch (temp) {
            case "0":
                card10.setIcon(a);
                break;
            case "1":
                card10.setIcon(b);
                break;
            case "2":
                card10.setIcon(c);
                break;
            case "3":
                card10.setIcon(d);
                break;
            case "4":
                card10.setIcon(e);
                break;
            case "5":
                card10.setIcon(f);
                break;
            case "6":
                card10.setIcon(g);
                break;
            case "7":
                card10.setIcon(h);
                break;
            default:
                break;
        }
        
        count++;
        if (count == 1){
            c1=Integer.parseInt(temp);
            change[9] = 0;
        } else if (count == 2){
            c2=Integer.parseInt(temp);
            change[9] = 0;
        }
    }//GEN-LAST:event_card10MouseClicked

    private void card11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_card11MouseClicked
        String temp = cards.get(10);
        
        switch (temp) {
            case "0":
                card11.setIcon(a);
                break;
            case "1":
                card11.setIcon(b);
                break;
            case "2":
                card11.setIcon(c);
                break;
            case "3":
                card11.setIcon(d);
                break;
            case "4":
                card11.setIcon(e);
                break;
            case "5":
                card11.setIcon(f);
                break;
            case "6":
                card11.setIcon(g);
                break;
            case "7":
                card11.setIcon(h);
                break;
            default:
                break;
        }
        
        count++;
        if (count == 1){
            c1=Integer.parseInt(temp);
            change[10] = 0;
        } else if (count == 2){
            c2=Integer.parseInt(temp);
            change[10] = 0;
        }
    }//GEN-LAST:event_card11MouseClicked

    private void card12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_card12MouseClicked
        String temp = cards.get(11);
        
        switch (temp) {
            case "0":
                card12.setIcon(a);
                break;
            case "1":
                card12.setIcon(b);
                break;
            case "2":
                card12.setIcon(c);
                break;
            case "3":
                card12.setIcon(d);
                break;
            case "4":
                card12.setIcon(e);
                break;
            case "5":
                card12.setIcon(f);
                break;
            case "6":
                card12.setIcon(g);
                break;
            case "7":
                card12.setIcon(h);
                break;
            default:
                break;
        }
        
        count++;
        if (count == 1){
            c1=Integer.parseInt(temp);
            change[11] = 0;
        } else if (count == 2){
            c2=Integer.parseInt(temp);
            change[11] = 0;
        }
    }//GEN-LAST:event_card12MouseClicked

    private void card13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_card13MouseClicked
        String temp = cards.get(12);
        
        switch (temp) {
            case "0":
                card13.setIcon(a);
                break;
            case "1":
                card13.setIcon(b);
                break;
            case "2":
                card13.setIcon(c);
                break;
            case "3":
                card13.setIcon(d);
                break;
            case "4":
                card13.setIcon(e);
                break;
            case "5":
                card13.setIcon(f);
                break;
            case "6":
                card13.setIcon(g);
                break;
            case "7":
                card13.setIcon(h);
                break;
            default:
                break;
        }
        
        count++;
        if (count == 1){
            c1=Integer.parseInt(temp);
            change[12] = 0;
        } else if (count == 2){
            c2=Integer.parseInt(temp);
            change[12] = 0;
        }
    }//GEN-LAST:event_card13MouseClicked

    private void card14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_card14MouseClicked
        String temp = cards.get(13);
        
        switch (temp) {
            case "0":
                card14.setIcon(a);
                break;
            case "1":
                card14.setIcon(b);
                break;
            case "2":
                card14.setIcon(c);
                break;
            case "3":
                card14.setIcon(d);
                break;
            case "4":
                card14.setIcon(e);
                break;
            case "5":
                card14.setIcon(f);
                break;
            case "6":
                card14.setIcon(g);
                break;
            case "7":
                card14.setIcon(h);
                break;
            default:
                break;
        }
        
        count++;
        if (count == 1){
            c1=Integer.parseInt(temp);
            change[13] = 0;
        } else if (count == 2){
            c2=Integer.parseInt(temp);
            change[13] = 0;
        }
    }//GEN-LAST:event_card14MouseClicked

    private void card15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_card15MouseClicked
        String temp = cards.get(14);
        
        switch (temp) {
            case "0":
                card15.setIcon(a);
                break;
            case "1":
                card15.setIcon(b);
                break;
            case "2":
                card15.setIcon(c);
                break;
            case "3":
                card15.setIcon(d);
                break;
            case "4":
                card15.setIcon(e);
                break;
            case "5":
                card15.setIcon(f);
                break;
            case "6":
                card15.setIcon(g);
                break;
            case "7":
                card15.setIcon(h);
                break;
            default:
                break;
        }
        
        count++;
        if (count == 1){
            c1=Integer.parseInt(temp);
            change[14] = 0;
        } else if (count == 2){
            c2=Integer.parseInt(temp);
            change[14] = 0;
        }
    }//GEN-LAST:event_card15MouseClicked

    private void card16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_card16MouseClicked
        String temp = cards.get(15);
        
        switch (temp) {
            case "0":
                card16.setIcon(a);
                break;
            case "1":
                card16.setIcon(b);
                break;
            case "2":
                card16.setIcon(c);
                break;
            case "3":
                card16.setIcon(d);
                break;
            case "4":
                card16.setIcon(e);
                break;
            case "5":
                card16.setIcon(f);
                break;
            case "6":
                card16.setIcon(g);
                break;
            case "7":
                card16.setIcon(h);
                break;
            default:
                break;
        }
        
        count++;
        if (count == 1){
            c1=Integer.parseInt(temp);
            change[15] = 0;
        } else if (count == 2){
            c2=Integer.parseInt(temp);
            change[15] = 0;
        }
    }//GEN-LAST:event_card16MouseClicked

    private void guessButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guessButtonActionPerformed
        count = 0;
        if (c1 == c2) {
            for (int y=1; y<=2; y++) {
                if (change[0] == 0) {
                    card1.setIcon (done);
                    change[0] = 2;
                } else if (change[1] == 0) {
                    card2.setIcon(done);
                    change[1] = 2;
                } else if (change[2] == 0) {
                    card3.setIcon(done);
                    change[2] = 2;
                } else if (change[3] == 0) {
                    card4.setIcon(done);
                    change[3] = 2;
                } else if (change[4] == 0) {
                    card5.setIcon(done);
                    change[4] = 2;
                } else if (change[5] == 0) {
                    card6.setIcon(done);
                    change[5] = 2;
                } else if (change[6] == 0) {
                    card7.setIcon(done);
                    change[6] = 2;
                } else if (change[7] == 0) {
                    card8.setIcon(done);
                    change[7] = 2;
                } else if (change[8] == 0) {
                    card9.setIcon(done);
                    change[8] = 2;
                } else if (change[9] == 0) {
                    card10.setIcon(done);
                    change[9] = 2;
                } else if (change[10] == 0) {
                    card11.setIcon(done);
                    change[10] = 2;
                } else if (change[11] == 0) {
                    card12.setIcon(done);
                    change[11] = 2;
                } else if (change[12] == 0) {
                    card13.setIcon(done);
                    change[12] = 2;
                } else if (change[13] == 0) {
                    card14.setIcon(done);
                    change[13] = 2;
                } else if (change[14] == 0) {
                    card15.setIcon(done);
                    change[14] = 2;
                } else if (change[15] == 0) {
                    card16.setIcon(done);
                    change[15] = 2;
                } 
            }
        } else {

            for (int y = 1; y<=2; y++) {
                if (change[0] == 0) {
                    card1.setIcon (back);
                    change[0] = 1;
                } else if (change [1] == 0) {
                    card2.setIcon (back);
                    change [1] = 1;
                } else if (change [2] == 0) {
                    card3.setIcon (back);
                    change [2] = 1;
                } else if (change [3] == 0) {
                    card4.setIcon (back);
                    change [3] = 1;
                } else if (change [4] == 0) {
                    card5.setIcon (back);
                    change [4] = 1;
                } else if (change [5] == 0) {
                    card6.setIcon (back);
                    change [5] = 1;
                } else if (change [6] == 0) {
                    card7.setIcon (back);
                    change [6] = 1;
                } else if (change [7] == 0) {
                    card8.setIcon (back);
                    change [7] = 1;
                } else if (change [8] == 0) {
                    card9.setIcon (back);
                    change [8] = 1;
                } else if (change [9] == 0) {
                    card10.setIcon (back);
                    change [9] = 1;
                } else if (change [10] == 0) {
                    card11.setIcon (back);
                    change [10] = 1;
                } else if (change [11] == 0) {
                    card12.setIcon (back);
                    change [11] = 1;
                } else if (change [12] == 0) {
                    card13.setIcon (back);
                    change [12] = 1;
                } else if (change [13] == 0) {
                    card14.setIcon (back);
                    change [13] = 1;
                } else if (change [14] == 0) {
                    card15.setIcon (back);
                    change [14] = 1;
                } else if (change [15] == 0) {
                    card16.setIcon (back);
                    change [15] = 1;
                } 
            }
        }
    }//GEN-LAST:event_guessButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MatchingGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MatchingGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MatchingGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MatchingGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MatchingGame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton card1;
    private javax.swing.JButton card10;
    private javax.swing.JButton card11;
    private javax.swing.JButton card12;
    private javax.swing.JButton card13;
    private javax.swing.JButton card14;
    private javax.swing.JButton card15;
    private javax.swing.JButton card16;
    private javax.swing.JButton card2;
    private javax.swing.JButton card3;
    private javax.swing.JButton card4;
    private javax.swing.JButton card5;
    private javax.swing.JButton card6;
    private javax.swing.JButton card7;
    private javax.swing.JButton card8;
    private javax.swing.JButton card9;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton guessButton;
    private javax.swing.JLabel mainTitle;
    private javax.swing.JTextField outputDisplay;
    private javax.swing.JButton playButton;
    // End of variables declaration//GEN-END:variables
}
